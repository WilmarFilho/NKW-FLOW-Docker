{
  "name": "WebHookEvolution",
  "nodes": [
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Edit Fields').item.json.numero }}",
        "sessionTTL": 86400,
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        1680,
        140
      ],
      "id": "90c8266f-7906-43b8-bd68-40cb89a6dfb9",
      "name": "Redis Chat Memory",
      "credentials": {
        "redis": {
          "id": "NpU6cY35va4aUHL6",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1520,
        140
      ],
      "id": "98c6e99e-a189-493e-beab-72c38dd05443",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "dE85jduOw7MD0WIL",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Você é o Carlos, atendente da Gráfica Coonexão. Seu papel é conversar com os clientes de forma simpática, clara e acessível — como se estivesse no balcão da gráfica. Fale como um humano de verdade: sem linguagem robótica, sem formalidade exagerada, mas também sem gírias demais. Nada de usar emojis.\n\nA mensagem recebida do cliente foi:\n\"{{ $json.recebida }}\"\nO número do cliente é: {{ $json.numero }}\n\nResponda à mensagem com educação, atenção e agilidade. Você conhece tudo sobre materiais gráficos: papel, acabamento, tamanhos, tipos de impressão, prazos, formatos de arquivo, cartões de visita, banners, panfletos, adesivos, papel timbrado, etc. Pode tirar dúvidas, sugerir soluções, explicar diferenças técnicas e até dar ideia pro cliente, sempre que fizer sentido.\n\nSe a mensagem for sobre orçamento, prazos, tipos de papel ou qualquer produto gráfico, responda como quem está acostumado a lidar com isso no dia a dia, pronto pra ajudar. Se for uma pergunta vaga ou confusa, puxe assunto com leveza e tente entender melhor o que o cliente precisa.\n\nExemplos de tom de voz que você pode usar:\n\n\"Oi! Tudo certo? Manda aí o que você precisa que te ajudo rapidinho.\"\n\n\"Beleza! Só me diz qual o tipo de material que você quer, que eu já te passo as opções.\"\n\n\"Ah, entendi! Nesse caso, a gente pode usar um papel mais firme, tipo couché 300g, com laminação fosca. Fica bem profissional.\"\n\nSua resposta deve ser a fala do Carlos, o atendente da gráfica.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1580,
        -20
      ],
      "id": "55704142-f8af-465e-a572-3dfb24d52ab1",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bd2560dc-d3f4-4588-8889-5cfab3fc44fc",
              "name": "instance",
              "value": "={{ $json.body.instance }}",
              "type": "string"
            },
            {
              "id": "d1a07342-2d4d-4de2-8563-9cea5bd56864",
              "name": "numero",
              "value": "={{ $json.body.data.key.remoteJid.replaceAll('@s.whatsapp.net', '') }}",
              "type": "string"
            },
            {
              "id": "1bf85edd-76cb-4dff-a0b5-bf3c9545d44d",
              "name": "recebida",
              "value": "={{ $json.body.data.message.conversation }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1400,
        -20
      ],
      "id": "b529ad42-889a-4df3-863c-17848c9de795",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "evolution",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -60,
        80
      ],
      "id": "29ee0547-8a65-4c72-b510-0c907f5facb6",
      "name": "Webhook",
      "webhookId": "72ba61bc-d8fe-4b42-b8ad-263f918ffe29"
    },
    {
      "parameters": {
        "content": "SERVER NODE\n",
        "height": 280,
        "width": 640,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -200,
        -320
      ],
      "id": "42542a76-b583-4439-898c-38b264c3c823",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.208.1:5679/dispatch",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "instance",
              "value": "={{ $json.body.instance }}"
            },
            {
              "name": "event",
              "value": "={{ $json.body.event }}"
            },
            {
              "name": "data",
              "value": "={{ $json.body.data }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -140,
        -240
      ],
      "id": "6ecab485-6d3f-4844-8e40-f883dcab8ad7",
      "name": "EnviaEventoBack"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        140,
        -240
      ],
      "id": "b8493934-c978-4ee7-b6e1-251ce974d7dd",
      "name": "FIM"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.event }}",
                    "rightValue": "messages.upsert",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "ca8aeb55-9118-4e3a-b808-098782ebccd4"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8cb18a51-b39a-4bfe-8fb7-7a61299ec52b",
                    "leftValue": "={{ $json.body.event }}",
                    "rightValue": "connection.update",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        300,
        80
      ],
      "id": "2c80d6ff-2835-4632-bdc4-56c3bf0f1eb5",
      "name": "TipoEvento"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "2b9754dc-9aac-4235-954b-5c873d33f8fb",
              "leftValue": "={{ $json.body.data.key.fromMe }}",
              "rightValue": "=true",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1180,
        0
      ],
      "id": "6f3c4881-08bd-4b4a-a753-c085b7ae5d5f",
      "name": "TEMPORARIO"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "0155550b-24db-4603-a7c4-5a756ff3c734",
              "leftValue": "={{ $json.body.event }}",
              "rightValue": "=connection.update",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "312a160f-6e7e-484d-8e80-5faaf3db2787",
              "leftValue": "={{ $json.body.data.state }}",
              "rightValue": "close",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        200,
        1080
      ],
      "id": "30ddb149-7530-4e6c-9866-acd6aa2bbe9e",
      "name": "TipoConexão"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        760,
        1080
      ],
      "id": "b25f5ba6-1ca4-42ec-973a-c40f43b3f23a",
      "name": "FIM1"
    },
    {
      "parameters": {
        "method": "DELETE",
        "url": "=http://host.docker.internal:8081/instance/delete/{{ $json.body.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "SUA_KEY"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        500,
        1080
      ],
      "id": "678c7ad9-443a-4fe5-8ee1-22b56fc66906",
      "name": "RequisiçãoDELETE"
    },
    {
      "parameters": {
        "content": "EVENTO TIPO = CONEXÃO UPDATE\n",
        "height": 280,
        "width": 880,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        140,
        1000
      ],
      "id": "a5443fe4-c894-4264-ae29-0b2b90732a3e",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "EVENTO TIPO = MENSAGEM UPDATE\n\n",
        "height": 960,
        "width": 2520,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        500,
        -100
      ],
      "id": "a9224d89-f697-448f-bf21-c536a17c67ab",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.data.message.conversation }}",
                    "rightValue": "messages.upsert",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "ca8aeb55-9118-4e3a-b808-098782ebccd4"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8cb18a51-b39a-4bfe-8fb7-7a61299ec52b",
                    "leftValue": "={{ $json.body.data.message.audioMessage.mimetype }}",
                    "rightValue": "=audio/ogg; codecs=opus",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d732251d-86d1-44d6-8ce2-ee673480e2d4",
                    "leftValue": "={{ $json.body.data.message.imageMessage.mimetype }}",
                    "rightValue": "image/jpeg",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        540,
        60
      ],
      "id": "3ef68e38-55ce-4ffd-a346-ac58566ec73d",
      "name": "TipoMensagem"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "2b9754dc-9aac-4235-954b-5c873d33f8fb",
              "leftValue": "={{ $json.body.data.key.fromMe }}",
              "rightValue": "=true",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1180,
        380
      ],
      "id": "aac707dc-7315-4fa7-95d8-c981ebc2dfde",
      "name": "TEMPORARIO1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "2b9754dc-9aac-4235-954b-5c873d33f8fb",
              "leftValue": "={{ $json.body.data.key.fromMe }}",
              "rightValue": "=true",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1180,
        620
      ],
      "id": "22a4cd7d-2e66-4f2c-a0f3-567bab45bd59",
      "name": "TEMPORARIO2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://host.docker.internal:8081/message/sendText/{{ $json.body.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "SUA_KEY"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $json.body.data.key.remoteJid.replaceAll('@s.whatsapp.net', '') }}"
            },
            {
              "name": "text",
              "value": "CHEGOU AUDIO"
            },
            {
              "name": "delay",
              "value": "={{ 100 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1460,
        380
      ],
      "id": "fed25b71-7d36-4a40-b9d1-bb8025de8871",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://host.docker.internal:8081/message/sendText/{{ $json.body.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "SUA_KEY"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $json.body.data.key.remoteJid.replaceAll('@s.whatsapp.net', '') }}"
            },
            {
              "name": "text",
              "value": "CHEGOU IMAGEM"
            },
            {
              "name": "delay",
              "value": "={{ 100 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1460,
        620
      ],
      "id": "0b046dd4-0ec7-4c54-8ed1-56fc6084b1fc",
      "name": "HTTP Request2"
    },
    {
      "parameters": {
        "content": "Mensagem de texto\n",
        "height": 360,
        "width": 1700
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1100,
        -80
      ],
      "id": "9eaaf0c8-1ff3-4d04-8819-c69622463ec5",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "Mensagem de audio\n",
        "height": 240,
        "width": 1700
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1100,
        300
      ],
      "id": "dc4db505-4137-4362-b92c-9f8dfd938405",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "Mensagem de imagem\n\n",
        "height": 240,
        "width": 1700
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1100,
        560
      ],
      "id": "e9435efc-f26f-48c7-8340-ef09f75ca330",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "jsCode": "const item = items[0];\nconst fullResponse = item.json.output;\n\nconst sentences = fullResponse.split(/(?<=[.?!])\\s+|\\n\\s*\\n|\\n(?=[A-Z])/)\n                              .filter(s => s.trim() !== '');\n\nif (sentences.length === 0 && fullResponse.trim() !== '') {\n  sentences.push(fullResponse.trim());\n}\n\n// CRUCIAL: Criamos um array de OBJETOS, onde cada um tem uma chave \"text\".\nitem.json.messagesToSend = sentences.map(sentence => ({ text: sentence.trim() }));\n\n// Retorna o item único com o array dentro.\nreturn [item];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1900,
        -20
      ],
      "id": "42742ec7-0107-4797-9224-b7cfc468c773",
      "name": "DivideMensagem"
    },
    {
      "parameters": {
        "fieldToSplitOut": "messagesToSend",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2080,
        -20
      ],
      "id": "d16d5f48-1ab6-4c43-9531-221d9fa81f55",
      "name": "SplitaEmItens"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2280,
        -20
      ],
      "id": "84acd7d5-bbf5-4601-aefa-e5abfb46e645",
      "name": "RodaTodasMSG"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://host.docker.internal:8081/message/sendText/{{ $('Edit Fields').item.json.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "SUA_KEY"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Edit Fields').item.json.numero }}"
            },
            {
              "name": "text",
              "value": "={{ $json.text }}"
            },
            {
              "name": "delay",
              "value": "={{ 5000 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2520,
        -20
      ],
      "id": "a803f2d1-f0f4-4e52-b2f9-8fd3163cba10",
      "name": "RequisiçãoEnviaMSG"
    }
  ],
  "pinData": {},
  "connections": {
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "DivideMensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "EnviaEventoBack",
            "type": "main",
            "index": 0
          },
          {
            "node": "TipoEvento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EnviaEventoBack": {
      "main": [
        [
          {
            "node": "FIM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TEMPORARIO": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "TipoEvento": {
      "main": [
        [
          {
            "node": "TipoMensagem",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "TipoConexão",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TipoConexão": {
      "main": [
        [
          {
            "node": "RequisiçãoDELETE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RequisiçãoDELETE": {
      "main": [
        [
          {
            "node": "FIM1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TipoMensagem": {
      "main": [
        [
          {
            "node": "TEMPORARIO",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "TEMPORARIO1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "TEMPORARIO2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TEMPORARIO1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TEMPORARIO2": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DivideMensagem": {
      "main": [
        [
          {
            "node": "SplitaEmItens",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SplitaEmItens": {
      "main": [
        [
          {
            "node": "RodaTodasMSG",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RodaTodasMSG": {
      "main": [
        [],
        [
          {
            "node": "RequisiçãoEnviaMSG",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RequisiçãoEnviaMSG": {
      "main": [
        [
          {
            "node": "RodaTodasMSG",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "39fb5bb3-383a-45d8-b74a-963603adf4c7",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "056780cb36eb08b136d30b06959331710578fac64655c750331799f79d700200"
  },
  "id": "Y3UquPDVvmWGip7P",
  "tags": []
}